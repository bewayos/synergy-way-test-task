version: "3.9"
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-app}
      POSTGRES_DB: ${POSTGRES_DB:-app}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 20
    volumes:
      - pgdata:/var/lib/postgresql/data

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20

  api:
    build: .
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    env_file: .env
    environment:
      DATABASE_URL: ${DATABASE_URL}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  worker:
    build: .
    command: ["celery", "-A", "app.celery_app.celery", "worker", "-l", "info"]
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  beat:
    build: .
    command: ["celery", "-A", "app.celery_app.celery", "beat", "-l", "info"]
    env_file: .env
    depends_on:
      rabbitmq:
        condition: service_healthy

  flower:
    image: mher/flower:latest
    command: ["--broker=${CELERY_BROKER_URL}"]
    ports:
      - "5555:5555"
    depends_on:
      rabbitmq:
        condition: service_healthy
    env_file: .env

volumes:
  pgdata: {}